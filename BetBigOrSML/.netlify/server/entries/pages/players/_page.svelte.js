import { c as create_ssr_component, a as subscribe, e as escape, b as add_attribute, d as each } from "../../../chunks/ssr.js";
import { w as writable } from "../../../chunks/index.js";
const css = {
  code: "input.svelte-aoa498.svelte-aoa498{margin-bottom:1rem;padding:0.5rem;width:100%}.leading-players.svelte-aoa498.svelte-aoa498{display:flex;justify-content:space-between;margin-bottom:1rem}.leading-player.svelte-aoa498.svelte-aoa498{flex:1;padding:1rem;background-color:#f0f0f0;border-radius:5px;margin:0 0.5rem;text-align:center}ul.svelte-aoa498.svelte-aoa498{list-style:none;padding:0}li.svelte-aoa498.svelte-aoa498{padding:0.5rem;cursor:pointer;transition:background 0.3s}li.svelte-aoa498.svelte-aoa498:hover{background:#f0f0f0}.player-details.svelte-aoa498.svelte-aoa498{display:flex;align-items:flex-start;margin-top:20px;padding:20px;background-color:#f0f0f0;border-radius:5px}.player-headshot.svelte-aoa498.svelte-aoa498{width:150px;height:150px;object-fit:cover;border-radius:50%;margin-right:20px}.player-info.svelte-aoa498.svelte-aoa498{flex:1}.stats-table.svelte-aoa498.svelte-aoa498{margin-top:1rem;width:100%;border-collapse:collapse}.stats-table.svelte-aoa498 th.svelte-aoa498,.stats-table.svelte-aoa498 td.svelte-aoa498{padding:0.2rem;border:1px solid #ddd;text-align:center}.stats-table.svelte-aoa498 th.svelte-aoa498{background-color:#eee}.stats-table.svelte-aoa498 td.svelte-aoa498{background-color:#fff}",
  map: `{"version":3,"file":"+page.svelte","sources":["+page.svelte"],"sourcesContent":["<script>\\n  let pageTitle = \\"Players - BetBigOrSML\\";\\n\\n  import { onMount } from \\"svelte\\";\\n  import { writable } from \\"svelte/store\\";\\n\\n  const players = writable([]); // Store for all players' data\\n  const searchTerm = writable(\\"\\"); // Store for search term input\\n  let filteredPlayers = []; // Array of filtered players\\n  let uniquePlayers = []; // Array of unique players\\n  let selectedPlayer = null; // Holds selected player's data\\n  let selectedPlayerStats = []; // Holds weekly stats for the selected player\\n\\n  let leadingRusher = null; // Leading player in rushing yards\\n  let leadingPasser = null; // Leading player in passing yards\\n  let leadingReceiver = null; // Leading player in receiving yards\\n\\n  // Fetch players' data from the backend for all positions\\n  async function fetchPlayers() {\\n    try {\\n      // Fetch data from all four APIs\\n      const qbResponse = await fetch(\\"http://localhost:4000/api/qbweeklydata\\");\\n      const rbResponse = await fetch(\\"http://localhost:4000/api/rbweeklydata\\");\\n      const teResponse = await fetch(\\"http://localhost:4000/api/teweeklydata\\");\\n      const wrResponse = await fetch(\\"http://localhost:4000/api/wrweeklydata\\");\\n\\n      if (\\n        !qbResponse.ok ||\\n        !rbResponse.ok ||\\n        !teResponse.ok ||\\n        !wrResponse.ok\\n      ) {\\n        throw new Error(\\"Network response was not ok\\");\\n      }\\n\\n      // Parse the responses\\n      const qbData = await qbResponse.json();\\n      const rbData = await rbResponse.json();\\n      const teData = await teResponse.json();\\n      const wrData = await wrResponse.json();\\n\\n      // Combine all player data into one array\\n      return [...qbData, ...rbData, ...teData, ...wrData];\\n    } catch (error) {\\n      console.error(\\"Error fetching data:\\", error);\\n      return [];\\n    }\\n  }\\n\\n  // Execute when the component is mounted\\n  onMount(async () => {\\n    const allPlayersData = await fetchPlayers();\\n    players.set(allPlayersData);\\n\\n    // Extract unique players based on their player_id\\n    uniquePlayers = Array.from(\\n      new Map(\\n        allPlayersData.map((player) => [player.player_id, player])\\n      ).values()\\n    );\\n\\n    // Calculate leading players\\n    calculateLeaders(allPlayersData);\\n  });\\n\\n  // Calculate leading players based on stats\\n  function calculateLeaders(allPlayersData) {\\n    leadingRusher = allPlayersData.reduce(\\n      (prev, current) =>\\n        prev.rushing_yards > current.rushing_yards ? prev : current,\\n      allPlayersData[0]\\n    );\\n    leadingPasser = allPlayersData.reduce(\\n      (prev, current) =>\\n        prev.passing_yards > current.passing_yards ? prev : current,\\n      allPlayersData[0]\\n    );\\n    leadingReceiver = allPlayersData.reduce(\\n      (prev, current) =>\\n        prev.receiving_yards > current.receiving_yards ? prev : current,\\n      allPlayersData[0]\\n    );\\n  }\\n\\n  // Filter players based on the search term\\n  $: {\\n    const term = $searchTerm.toLowerCase();\\n    filteredPlayers = uniquePlayers.filter((player) =>\\n      player.player_display_name.toLowerCase().includes(term)\\n    );\\n  }\\n\\n  // Select player and get all weekly stats for that player\\n  function selectPlayer(player) {\\n    selectedPlayer = player; // Store basic player info\\n    selectedPlayerStats = $players.filter(\\n      (p) => p.player_id === player.player_id\\n    ); // Get all weekly stats for the selected player\\n  }\\n\\n  // Clear the selected player and return to the player list\\n  function clearSelection() {\\n    selectedPlayer = null;\\n    selectedPlayerStats = [];\\n  }\\n<\/script>\\n\\n<svelte:head>\\n  <title>{pageTitle}</title>\\n</svelte:head>\\n\\n<h1>Search NFL Players</h1>\\n<input type=\\"text\\" placeholder=\\"Search players...\\" bind:value={$searchTerm} />\\n\\n<!-- Leading Player Stats Display -->\\n<div class=\\"leading-players\\">\\n  <div class=\\"leading-player\\">\\n    <h2>Leading Rusher</h2>\\n    <p>\\n      {leadingRusher?.player_display_name || \\"N/A\\"} - {leadingRusher?.rushing_yards ||\\n        0} Yards\\n    </p>\\n  </div>\\n  <div class=\\"leading-player\\">\\n    <h2>Leading Passer</h2>\\n    <p>\\n      {leadingPasser?.player_display_name || \\"N/A\\"} - {leadingPasser?.passing_yards ||\\n        0} Yards\\n    </p>\\n  </div>\\n  <div class=\\"leading-player\\">\\n    <h2>Leading Receiver</h2>\\n    <p>\\n      {leadingReceiver?.player_display_name || \\"N/A\\"} - {leadingReceiver?.receiving_yards ||\\n        0} Yards\\n    </p>\\n  </div>\\n</div>\\n\\n<!-- Show the player list only if the search term is not empty -->\\n{#if $searchTerm.length > 0}\\n  <ul>\\n    {#each filteredPlayers as player}\\n      <li>\\n        <a\\n          href=\\"#{player.player_display_name}\\"\\n          on:click|preventDefault={() => selectPlayer(player)}\\n        >\\n          {player.player_display_name}\\n        </a>\\n      </li>\\n    {/each}\\n  </ul>\\n{/if}\\n\\n<!-- Show player details with all weekly stats in a table if a player is selected -->\\n{#if selectedPlayer}\\n  <div class=\\"player-details\\">\\n    <img\\n      src={selectedPlayer.headshot_url}\\n      alt={selectedPlayer.player_display_name}\\n      class=\\"player-headshot\\"\\n    />\\n    <div class=\\"player-info\\">\\n      <h2>{selectedPlayer.player_display_name}</h2>\\n      <p>Team: {selectedPlayer.recent_team}</p>\\n      <p>Position: {selectedPlayer.position}</p>\\n\\n      <!-- Modify the stats table to display position-specific stats -->\\n      <table class=\\"stats-table\\">\\n        <thead>\\n          <tr>\\n            <th>Week</th>\\n            <th>Opponent</th>\\n            <!-- Conditional columns based on the selected player's position -->\\n            {#if selectedPlayer.position_group === \\"QB\\"}\\n              <th>Completions / Attempts</th>\\n              <th>Passing Yards</th>\\n              <th>Passing TDs</th>\\n              <th>Interceptions</th>\\n              <th>Sacks</th>\\n            {/if}\\n\\n            {#if selectedPlayer.position_group === \\"RB\\" || selectedPlayer.position_group === \\"WR\\" || selectedPlayer.position_group === \\"TE\\"}\\n              <th>Carries</th>\\n              <th>Rushing Yards</th>\\n              <th>Rushing TDs</th>\\n              <th>Receptions</th>\\n              <th>Receiving Yards</th>\\n              <th>Receiving TDs</th>\\n            {/if}\\n\\n            <!-- Common columns for all positions -->\\n            <th>Fantasy Points</th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          {#each selectedPlayerStats as week}\\n            <tr>\\n              <td>{week.week}</td>\\n              <td>{week.opponent_team}</td>\\n\\n              <!-- QB-specific stats -->\\n              {#if selectedPlayer.position_group === \\"QB\\"}\\n                <td>{week.completions} / {week.attempts}</td>\\n                <td>{week.passing_yards}</td>\\n                <td>{week.passing_tds}</td>\\n                <td>{week.interceptions}</td>\\n                <td>{week.sacks} (Yards lost: {week.sack_yards})</td>\\n              {/if}\\n\\n              <!-- RB, WR, TE stats -->\\n              {#if selectedPlayer.position_group === \\"RB\\" || selectedPlayer.position_group === \\"WR\\" || selectedPlayer.position_group === \\"TE\\"}\\n                <td>{week.carries}</td>\\n                <td>{week.rushing_yards}</td>\\n                <td>{week.rushing_tds}</td>\\n                <td>{week.receptions}</td>\\n                <td>{week.receiving_yards}</td>\\n                <td>{week.receiving_tds}</td>\\n              {/if}\\n\\n              <!-- Common stats -->\\n              <td>{week.fantasy_points.toFixed(2)}</td>\\n            </tr>\\n          {/each}\\n        </tbody>\\n      </table>\\n\\n      <button on:click={clearSelection}>Back to player list</button>\\n    </div>\\n  </div>\\n{/if}\\n\\n<style>\\n  input {\\n    margin-bottom: 1rem;\\n    padding: 0.5rem;\\n    width: 100%;\\n  }\\n\\n  .leading-players {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-bottom: 1rem;\\n  }\\n\\n  .leading-player {\\n    flex: 1;\\n    padding: 1rem;\\n    background-color: #f0f0f0;\\n    border-radius: 5px;\\n    margin: 0 0.5rem;\\n    text-align: center;\\n  }\\n\\n  ul {\\n    list-style: none;\\n    padding: 0;\\n  }\\n\\n  li {\\n    padding: 0.5rem;\\n    cursor: pointer;\\n    transition: background 0.3s;\\n  }\\n\\n  li:hover {\\n    background: #f0f0f0;\\n  }\\n\\n  .player-details {\\n    display: flex;\\n    align-items: flex-start;\\n    margin-top: 20px;\\n    padding: 20px;\\n    background-color: #f0f0f0;\\n    border-radius: 5px;\\n  }\\n\\n  .player-headshot {\\n    width: 150px;\\n    height: 150px;\\n    object-fit: cover;\\n    border-radius: 50%;\\n    margin-right: 20px;\\n  }\\n\\n  .player-info {\\n    flex: 1;\\n  }\\n\\n  .stats-table {\\n    margin-top: 1rem;\\n    width: 100%;\\n    border-collapse: collapse;\\n  }\\n\\n  .stats-table th,\\n  .stats-table td {\\n    padding: 0.2rem;\\n    border: 1px solid #ddd;\\n    text-align: center;\\n  }\\n\\n  .stats-table th {\\n    background-color: #eee;\\n  }\\n\\n  .stats-table td {\\n    background-color: #fff;\\n  }\\n</style>\\n"],"names":[],"mappings":"AA0OE,iCAAM,CACJ,aAAa,CAAE,IAAI,CACnB,OAAO,CAAE,MAAM,CACf,KAAK,CAAE,IACT,CAEA,4CAAiB,CACf,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,aAAa,CAC9B,aAAa,CAAE,IACjB,CAEA,2CAAgB,CACd,IAAI,CAAE,CAAC,CACP,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,CAAC,CAAC,MAAM,CAChB,UAAU,CAAE,MACd,CAEA,8BAAG,CACD,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,CACX,CAEA,8BAAG,CACD,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,UAAU,CAAC,IACzB,CAEA,8BAAE,MAAO,CACP,UAAU,CAAE,OACd,CAEA,2CAAgB,CACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,UAAU,CACvB,UAAU,CAAE,IAAI,CAChB,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,GACjB,CAEA,4CAAiB,CACf,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,IAChB,CAEA,wCAAa,CACX,IAAI,CAAE,CACR,CAEA,wCAAa,CACX,UAAU,CAAE,IAAI,CAChB,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,QACnB,CAEA,0BAAY,CAAC,gBAAE,CACf,0BAAY,CAAC,gBAAG,CACd,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,UAAU,CAAE,MACd,CAEA,0BAAY,CAAC,gBAAG,CACd,gBAAgB,CAAE,IACpB,CAEA,0BAAY,CAAC,gBAAG,CACd,gBAAgB,CAAE,IACpB"}`
};
let pageTitle = "Players - BetBigOrSML";
const Page = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let $$unsubscribe_players;
  let $searchTerm, $$unsubscribe_searchTerm;
  const players = writable([]);
  $$unsubscribe_players = subscribe(players, (value) => value);
  const searchTerm = writable("");
  $$unsubscribe_searchTerm = subscribe(searchTerm, (value) => $searchTerm = value);
  let filteredPlayers = [];
  let uniquePlayers = [];
  $$result.css.add(css);
  {
    {
      const term = $searchTerm.toLowerCase();
      filteredPlayers = uniquePlayers.filter((player) => player.player_display_name.toLowerCase().includes(term));
    }
  }
  $$unsubscribe_players();
  $$unsubscribe_searchTerm();
  return `${$$result.head += `<!-- HEAD_svelte-lm5hoi_START -->${$$result.title = `<title>${escape(pageTitle)}</title>`, ""}<!-- HEAD_svelte-lm5hoi_END -->`, ""} <h1 data-svelte-h="svelte-9qjjti">Search NFL Players</h1> <input type="text" placeholder="Search players..." class="svelte-aoa498"${add_attribute("value", $searchTerm, 0)}>  <div class="leading-players svelte-aoa498"><div class="leading-player svelte-aoa498"><h2 data-svelte-h="svelte-1vfnjqh">Leading Rusher</h2> <p>${escape("N/A")} - ${escape(0)} Yards</p></div> <div class="leading-player svelte-aoa498"><h2 data-svelte-h="svelte-1cmk5ha">Leading Passer</h2> <p>${escape("N/A")} - ${escape(0)} Yards</p></div> <div class="leading-player svelte-aoa498"><h2 data-svelte-h="svelte-1bv1n15">Leading Receiver</h2> <p>${escape("N/A")} - ${escape(0)} Yards</p></div></div>  ${$searchTerm.length > 0 ? `<ul class="svelte-aoa498">${each(filteredPlayers, (player) => {
    return `<li class="svelte-aoa498"><a href="${"#" + escape(player.player_display_name, true)}">${escape(player.player_display_name)}</a> </li>`;
  })}</ul>` : ``}  ${``}`;
});
export {
  Page as default
};
